[{"C:\\Users\\sttro\\dev\\loft-web\\src\\index.js":"1","C:\\Users\\sttro\\dev\\loft-web\\src\\reportWebVitals.js":"2","C:\\Users\\sttro\\dev\\loft-web\\src\\components\\App\\App.js":"3","C:\\Users\\sttro\\dev\\loft-web\\src\\components\\Header\\Header.js":"4","C:\\Users\\sttro\\dev\\loft-web\\src\\components\\NavBar\\NavBar.js":"5","C:\\Users\\sttro\\dev\\loft-web\\src\\components\\Main\\Main.js":"6","C:\\Users\\sttro\\dev\\loft-web\\src\\components\\QuoteList\\QuoteList.js":"7","C:\\Users\\sttro\\dev\\loft-web\\src\\utils\\quotes.js":"8","C:\\Users\\sttro\\dev\\loft-web\\src\\components\\Quote\\Quote.js":"9","C:\\Users\\sttro\\dev\\loft-web\\src\\components\\PopupWithForm\\PopupWithForm.js":"10","C:\\Users\\sttro\\dev\\loft-web\\src\\contexts\\PopupContext.js":"11","C:\\Users\\sttro\\dev\\loft-web\\src\\utils\\countries.js":"12","C:\\Users\\sttro\\dev\\loft-web\\src\\utils\\api.js":"13"},{"size":608,"mtime":1607101705891,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1523,"mtime":1607632241820,"results":"17","hashOfConfig":"15"},{"size":829,"mtime":1607201959546,"results":"18","hashOfConfig":"15"},{"size":691,"mtime":1607632148454,"results":"19","hashOfConfig":"15"},{"size":4412,"mtime":1607632236285,"results":"20","hashOfConfig":"15"},{"size":666,"mtime":1607561456127,"results":"21","hashOfConfig":"15"},{"size":633,"mtime":1607124082152,"results":"22","hashOfConfig":"15"},{"size":334,"mtime":1607394364327,"results":"23","hashOfConfig":"15"},{"size":6371,"mtime":1607631145434,"results":"24","hashOfConfig":"15"},{"size":152,"mtime":1607199876629,"results":"25","hashOfConfig":"15"},{"size":1220,"mtime":1607290057437,"results":"26","hashOfConfig":"15"},{"size":728,"mtime":1607386626279,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"sctqoa",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\sttro\\dev\\loft-web\\src\\index.js",[],["57","58"],"C:\\Users\\sttro\\dev\\loft-web\\src\\reportWebVitals.js",[],"C:\\Users\\sttro\\dev\\loft-web\\src\\components\\App\\App.js",["59","60"],"C:\\Users\\sttro\\dev\\loft-web\\src\\components\\Header\\Header.js",[],"C:\\Users\\sttro\\dev\\loft-web\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\sttro\\dev\\loft-web\\src\\components\\Main\\Main.js",["61"],"C:\\Users\\sttro\\dev\\loft-web\\src\\components\\QuoteList\\QuoteList.js",[],"C:\\Users\\sttro\\dev\\loft-web\\src\\utils\\quotes.js",[],["62","63"],"C:\\Users\\sttro\\dev\\loft-web\\src\\components\\Quote\\Quote.js",[],"C:\\Users\\sttro\\dev\\loft-web\\src\\components\\PopupWithForm\\PopupWithForm.js",["64","65","66"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport './PopupWithForm.css';\r\nimport popupCloseSign from '../../images/Icon.png';\r\nimport countries from '../../utils/countries';\r\nimport arrowUp from '../../images/Line.png';\r\nimport arrowDown from '../../images/Line-down.png';\r\nimport { OpenedPopupContext } from '../../contexts/PopupContext';\r\nimport tick from '../../images/Path.png';\r\n\r\nconst SelectContainer = styled(\"div\")`\r\n    margin: 0 0 16px 0;\r\n`;\r\nconst SelectedOption = styled(\"div\")`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 12px 16px 12px 16px;\r\n    background-color: rgba(9, 19, 33, 0.0638304);\r\n    border: none;\r\n    margin: 0;\r\n    text-align: left;\r\n    &:focus {\r\n        background-color: rgba(9, 19, 33, 0.0638304);\r\n    }\r\n`;\r\nconst Arrow = styled(\"img\")``;\r\n\r\nconst OptionsList = styled(\"ul\")`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    max-height: 150px;\r\n    overflow: auto;\r\n`;\r\nconst Option = styled(\"li\")`\r\n    text-align: left;\r\n    background-color: #F0F0F1;\r\n    padding: 12px 0 12px 16px;\r\n    &:hover {\r\n        background-color: rgba(0, 101, 242, 0.12);\r\n    }\r\n`;\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n    const [countryValue, setCountryValue] = React.useState();\r\n    const [cityValue, setCityValue] = React.useState();\r\n    const [tickIsSet, setTickIsSet] = React.useState(false);\r\n    const [selectedCountryOption, setSelectedCountryOption] = React.useState(false);\r\n    const [selectedCityOption, setSelectedCityOption] = React.useState(false);\r\n    const [isOffsetAvailable, setIsOffsetAvailable] = React.useState(false);\r\n    const [optionOffsetTop, setOptionOffsetTop] = React.useState(0);\r\n    // let isOffsetAvailable;\r\n    React.useEffect(() => {\r\n        if(selectedCityOption) {\r\n            setIsOffsetAvailable(true);\r\n        }\r\n    }, [selectedCityOption]);\r\n\r\n    //подумать над ref\r\n    const optionRef = React.useRef();\r\n\r\n    \r\n    function toggleCountrySelectMenu() {\r\n        setSelectedCountryOption(!selectedCountryOption);\r\n    }\r\n    function toggleCitySelectMenu() {\r\n        isOffsetAvailable && console.log(optionRef.current);\r\n        setSelectedCityOption(!selectedCityOption);\r\n    }\r\n    function showInputResult(evt) {\r\n        setCountryValue(evt.target.textContent);\r\n        setSelectedCountryOption(false);\r\n    }\r\n    function showCityInputResult(evt) {\r\n        const { textContent, id } = evt.target;\r\n        setOptionOffsetTop(evt.target.offsetTop);\r\n        setCityValue({ value: textContent, id });\r\n        setSelectedCityOption(false);\r\n        // console.log(evt.target);\r\n    }\r\n\r\n    function checkInputValidity(evt) {\r\n        const { valid } = evt.target.validity;\r\n        if(valid) {\r\n            evt.target.classList.remove('popup__form-input_error');\r\n        } else {\r\n            evt.target.classList.add('popup__form-input_error');\r\n        }\r\n    }\r\n\r\n    const filteredCountry = countries.filter((country) => {\r\n        return country.name === countryValue;\r\n    }).pop();\r\n   \r\n    function putTickInCheckbox() {\r\n        setTickIsSet(!tickIsSet);\r\n    }\r\n\r\n    // function showPageOffset(evt) {\r\n    //     console.log(evt.target.offsetTop);\r\n    // }\r\n\r\n    const popup = React.useContext(OpenedPopupContext);\r\n    \r\n    return (\r\n        <section className={`popup ${popup ? \"popup_status_opened\" : \"\"}`}>\r\n            <div className=\"popup__wrapper\">\r\n                <h3 className=\"popup__headline\">Модальное окно</h3>\r\n                <button className=\"popup__button-close\" onClick={props.closePopupWindow}><img src={popupCloseSign} className=\"popup__button-close-sign\"></img></button>\r\n                <form className=\"popup__form\" noValidate={true}>\r\n                    <input className=\"popup__form-input\" placeholder=\"ФИО\" autoComplete=\"off\"></input>\r\n                    <input className=\"popup__form-input\" placeholder=\"+7 (___) ___-__-__\" autoComplete=\"off\"  minLength={11} onChange={checkInputValidity}></input>\r\n                    <input className=\"popup__form-input\" placeholder=\"Email\" autoComplete=\"off\" type=\"email\" name=\"email\" onChange={checkInputValidity}></input>\r\n                    <SelectContainer>\r\n                        <SelectedOption onClick={toggleCountrySelectMenu}>{countryValue ? countryValue : \"Выберите страну\"}<Arrow src={!selectedCountryOption ? arrowDown : arrowUp}></Arrow></SelectedOption>\r\n                        {selectedCountryOption && <OptionsList>{countries.map((country, index) => {\r\n                            return <Option key={index} value={country.name} onClick={showInputResult}>{country.name}</Option>\r\n                        })}</OptionsList>}\r\n                    </SelectContainer>\r\n                    <SelectContainer>\r\n                    <SelectedOption onClick={toggleCitySelectMenu}>{cityValue ? cityValue.value : \"Выбрать город\"}<Arrow src={!selectedCityOption ? arrowDown : arrowUp}></Arrow></SelectedOption>\r\n                        {selectedCityOption && <OptionsList ref={optionRef}>{filteredCountry ? filteredCountry.cities.map((city, index) => {\r\n                            return <Option key={index} value={city} onClick={showCityInputResult} id={index}>{city}</Option>\r\n                        }) : \"\"}</OptionsList>}\r\n                    </SelectContainer>\r\n                    <div className=\"popup__form-input-wrapper\">\r\n                        <input className=\"popup__form-input-wrapper-checkbox\" id=\"data-process-admit\" name=\"admission\" type=\"checkbox\"></input>\r\n                        <label className=\"popup__form-input-wrapper-checkbox-custom\" htmlFor=\"data-process-admit\" onClick={putTickInCheckbox}>{tickIsSet ? <img alt=\"галка\" src={tick}></img>: \"\"}</label>\r\n                        <label className=\"popup__form-input-wrapper-label\" htmlFor=\"data-process-admit\" onClick={putTickInCheckbox}>Я согласен на обработку данных</label>\r\n                    </div>\r\n                    <button className=\"popup__form-submit\" type=\"submit\">Отправить</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"popup__overlay\" onClick={props.closePopupWindow}></div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","C:\\Users\\sttro\\dev\\loft-web\\src\\contexts\\PopupContext.js",[],"C:\\Users\\sttro\\dev\\loft-web\\src\\utils\\countries.js",[],"C:\\Users\\sttro\\dev\\loft-web\\src\\utils\\api.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":14,"column":10,"nodeType":"73","messageId":"74","endLine":14,"endColumn":19},{"ruleId":"71","severity":1,"message":"75","line":14,"column":21,"nodeType":"73","messageId":"74","endLine":14,"endColumn":33},{"ruleId":"71","severity":1,"message":"76","line":12,"column":13,"nodeType":"73","messageId":"74","endLine":12,"endColumn":16},{"ruleId":"67","replacedBy":"77"},{"ruleId":"69","replacedBy":"78"},{"ruleId":"71","severity":1,"message":"79","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"80","line":55,"column":12,"nodeType":"73","messageId":"74","endLine":55,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":113,"column":90,"nodeType":"83","endLine":113,"endColumn":153},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'pageRoute' is assigned a value but never used.","Identifier","unusedVar","'setPageRoute' is assigned a value but never used.","'url' is assigned a value but never used.",["84"],["85"],"'Link' is defined but never used.","'optionOffsetTop' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]